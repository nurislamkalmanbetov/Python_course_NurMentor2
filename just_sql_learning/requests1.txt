1. Основы SQL: SELECT
SELECT * FROM products;
SELECT name, price FROM products;
SELECT * FROM orders;
SELECT * FROM customers;

2. Фильтрация данных: WHERE
SELECT * FROM products WHERE price > 100;
SELECT * FROM orders WHERE status = 'completed';
SELECT * FROM customers WHERE last_name = 'Иванов';

3. Сортировка данных: ORDER BY
SELECT * FROM products ORDER BY price ASC;
SELECT * FROM orders ORDER BY created_at DESC;

4. Ограничение количества строк: LIMIT
SELECT * FROM products ORDER BY price DESC LIMIT 5;

5. Агрегатные функции: COUNT, SUM, AVG, MAX, MIN
SELECT COUNT(*) FROM products;
SELECT SUM(total_amount) FROM orders;
SELECT AVG(price) FROM products;
SELECT MAX(price), MIN(price) FROM products;

6. Группировка данных: GROUP BY
SELECT status, COUNT(*) FROM orders GROUP BY status;

7. Вставка данных: INSERT INTO
INSERT INTO products (name, description, price) VALUES ('Новый продукт', 'Описание продукта', 150.00);
INSERT INTO customers (first_name, last_name, email, phone, address) VALUES ('Алексей', 'Сидоров', 'sidorov@example.com', '+79220000000', 'ул. Мира, д. 30');

8. Обновление данных: UPDATE
UPDATE products SET price = 200.00 WHERE id = 1;
UPDATE orders SET status = 'shipped' WHERE order_number = 'ORD001';

9. Удаление данных: DELETE
DELETE FROM products WHERE id = 10;

10. Соединение таблиц: JOIN
Объединение таблиц orders(*) - customers(ИМЯ,ФАМИЛИЯ)
SELECT orders.*, customers.first_name, customers.last_name
FROM orders
JOIN customers ON orders.customer_email = customers.email;

12. Создание и использование представлений (views)
Создать представление для удобного просмотра заказов с информацией о клиентах:
CREATE VIEW orders_with_customers AS
SELECT orders.*, customers.first_name, customers.last_name
FROM orders
JOIN customers ON orders.customer_email = customers.email;

SELECT * FROM orders_with_customers;
