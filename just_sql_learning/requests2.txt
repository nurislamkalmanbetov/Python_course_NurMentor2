1)
Найти название продукта с минимальной ценой

Описание: Напишите SQL-запрос, который использует подзапрос для нахождения названия продукта с минимальной ценой.

SELECT name 
FROM products 
WHERE price = (SELECT MIN(price) FROM products);
--------------------------------------------------------------------------------
2) 
Напишите SQL-запрос, который использует подзапрос для нахождения товаров, цена которых выше средней цены всех товаров.

SELECT name, price
FROM products
WHERE price > (SELECT AVG(price) FROM products);
--------------------------------------------------------------------------------
3) 
Напишите SQL-запрос, который использует подзапрос для нахождения студентов, чей возраст выше среднего возраста всех студентов.

SELECT name, age
FROM students
WHERE age > (SELECT AVG(age) FROM students);
--------------------------------------------------------------------------------
4) 
Нахождение ранга каждого продукта по цене
Описание: Используйте оконную функцию для вычисления ранга каждого продукта на основе его цены. Ранг должен быть назначен в порядке убывания цены.

SELECT name, price,
       RANK() OVER (ORDER BY price DESC) AS price_rank
FROM products;
--------------------------------------------------------------------------------
5) 
Используйте оконную функцию для вычисления кумулятивной суммы цен всех продуктов, отсортированных по их ID.
SELECT id, name, price,
       SUM(price) OVER (ORDER BY id) AS cumulative_sum
FROM products;
--------------------------------------------------------------------------------
6)
Используйте оконную функцию для вычисления средней цены продуктов в каждой категории.

SELECT id, name, price, category,
       AVG(price) OVER (PARTITION BY category) AS avg_price_in_category
FROM products;


--------------------------------------------------------------------------------
7) 
Использование подзапроса с агрегатными функциями
Описание: Напишите SQL-запрос, который выбирает название продукта, его цену, категорию, рейтинг и максимальную цену в группе продуктов с таким же именем. В запросе используйте подзапрос и агрегатную функцию MAX.

Требования:
Использовать LEFT JOIN для присоединения подзапроса, который вычисляет максимальную цену для каждого продукта.
В основном запросе выбрать следующие поля: name, price, category, rating и MAX_PRICE (максимальная цена для продуктов с таким же именем).

SELECT p.name, p.price, p.category, p.rating, b.MAX_PRICE
FROM products p
LEFT JOIN
(
    SELECT name, MAX(price) as MAX_PRICE 
    FROM products
    GROUP BY name
) b ON p.name = b.name;

--------------------------------------------------------------------------------
8)
Использование оконных функций
Описание: Напишите SQL-запрос, который выбирает название продукта, его цену, категорию, рейтинг и максимальную цену среди всех продуктов с таким же именем. Используйте оконную функцию MAX с OVER.

Требования:
Использовать оконную функцию MAX с PARTITION BY для вычисления максимальной цены для каждого продукта в зависимости от его имени.
В основном запросе выбрать следующие поля: name, price, category, rating и MAX_PRICE (максимальная цена для продуктов с таким же именем).

SELECT 
    name, price, category, rating, 
    MAX(price) OVER (PARTITION BY name) as MAX_PRICE
FROM products;



